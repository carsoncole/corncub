.row
  .col-md-6
    .card
      .card-block
        .card-title
          %h2 Take Order Customer Details
        %p.text-emphasis= @take_order.envelope.name if @take_order.envelope
        %br
        = form_for @take_order do |f|
          = render 'errors', target: @take_order

          / - if current_scout.admin? && @take_order.envelope.nil?
          /   .form-group
          /     %label Scout
          /     = f.collection_select :scout_id, @active_event.unit.scouts.not_admin, :id, :last_first_name, {prompt: "Select a Scout"}, {class: 'form-control'}
          .form-group
            = f.label :customer_name
            = f.text_field :customer_name, class: 'form-control', placeholder: 'Name'
          .form-group
            = f.label 'Customer address (optional)'
            = f.text_field :customer_address, class: 'form-control', placeholder: 'Address'
          .form-group
            = f.label 'Customer email (optional)'
            %br
            %em.small.text-muted A thank you receipt will be sent if an email address is entered.
            = f.text_field :customer_email, class: 'form-control', placeholder: 'Email'
          .form-group
            = f.label 'Payment method'
            %br
            %em.small.text-muted Select 'Take Orders cash' for cash + checks. 
            = f.collection_select :payment_account_id, @accounts, :id, :name,{}, class: 'form-control'
          .form-group
            = f.label 'Note:'
            = f.text_field :note, class: 'form-control'

          - if current_scout.admin?
            .form-group

              = f.label :square_reciept_url
              %br
              %em.small Use if payment is by Square
              %br
              = f.text_field :square_reciept_url, class: 'form-control'          

          - if f.object.new_record?
            = f.hidden_field :envelope_id, value: f.object.envelope_id

          - unless f.object.new_record?
            .form-group
              %label
                = f.label :envelope
                %span= link_to "(New Envelope)", new_envelope_path
                %br
              = f.collection_select :envelope_id, @open_envelopes, :id, :name, {}, class: 'form-control'      

          .actions
            = f.submit 'Save', class: 'btn btn-success'