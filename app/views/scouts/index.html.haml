

.row
  .col-md-12
    .card
      .card-block
        .card-title
          %h3 Scouts / Administrators
     

        %ul.nav.nav-tabs
          %li.nav-item
            = link_to scouts_path(active: true), class: "nav-link #{'active' if params[:active] || (params[:administrators].blank? && params[:inactive].blank?) }" do
              Scouts
              = surround("(", ")") do
                = @scouts.length
          %li.nav-item
            = link_to scouts_path(administrators: true), class: "nav-link #{'active' if params[:administrators]}" do
              Administrators
              = surround("(", ")") do
                = @administrators.length
          - if @inactive_scouts.length != 0
            %li.nav-item
              = link_to scouts_path(inactive: true), class: "nav-link #{'active' if params[:inactive]}" do
                Archived
                = surround("(", ")") do
                  = @inactive_scouts.length            
        %br
        - unless params[:administrators].present?
          .table-responsive
            %table.table.card-text.table-sm
              %thead
                %tr.small
                  %th
                  %th Take Orders
                  %th Site Sales
                  %th Online
                  %th Total
                  %th Event
                  %th Email
                  %th Last Sign In
                  %th Sign Ins
                  - if current_scout.is_unit_admin?
                    %th.hidden-print

              %tbody
                - @scouts = @inactive_scouts if params[:inactive].present?
                - @scouts.each do |scout|
                  %tr
                    %td
                      %i.fa.fa-user
                      = link_to scout.name, scout_path(scout)
                    %td
                      - unless scout.is_admin? || @active_event.nil?
                        = link_to number_to_currency(TakeOrder.scout_sales(scout, @active_event), precision: 0), take_orders_path(scout_id: scout.id)
                    %td
                      - unless scout.is_admin? || @active_event.nil?
                        = link_to number_to_currency(scout.total_site_sales(@active_event), precision: 0), site_sales_path(scout_id: scout.id)
                    %td
                      - unless scout.is_admin? || @active_event.nil?
                        = link_to number_to_currency(scout.total_online_sales(@active_event), precision: 0), online_sales_path(scout_id: scout.id)
                    %td
                      - unless scout.is_admin? || @active_event.nil?
                        = number_to_currency(scout.total_sales(@active_event), precision: 0)
                    %td= scout.event.name if scout.event
                    %td= scout.email
                    %td= scout.last_sign_in_at.strftime('%b %d %I:%M%p') if scout.last_sign_in_at
                    %td.text-xs-center= scout.sign_in_count
                    - if current_scout.is_unit_admin?
                      %td.hidden-print
                        = link_to edit_scout_path(scout) do
                          %span.fa.fa-pencil.fa-lg
                        - unless scout.activity?
                          = link_to scout, :method => :delete, :data => { :confirm => 'Are you sure?' } do
                            %span.fa.fa-trash.fa-lg
                    
        - if params[:administrators].present?
          .table-responsive
            %table.table.card-text
              %thead.small
                %tr
                  %th
                  %th.text-center(colspan=6) Admin Roles
                  %th
                  %th
                  - if current_scout.is_unit_admin?
                    %th.hidden-print
                %tr
                  %th.text-center Name
                  %th.text-center Unit
                  %th.text-center Finances
                  %th.text-center Take Orders
                  %th.text-center Site Sales
                  %th.text-center Online Sales
                  %th.text-center Prizes
                  %th.text-center Last Sign In
                  %th.text-center Sign In Count
                  - if current_scout.is_unit_admin?
                    %th.hidden-print

              %tbody
                - @administrators.each do |scout|
                  %tr
                    %td
                      %i.fa.fa-user
                      = link_to scout.name, scout_path(scout)
                    %td.text-center
                      - if scout.is_unit_admin?
                        %i.fa.fa-check
                    %td.text-center
                      - if scout.is_financial_admin?
                        %i.fa.fa-check
                    %td.text-center
                      - if scout.is_take_orders_admin?
                        %i.fa.fa-check
                    %td.text-center
                      - if scout.is_site_sales_admin?
                        %i.fa.fa-check
                    %td.text-center
                      - if scout.is_online_sales_admin?
                        %i.fa.fa-check
                    %td.text-center
                      - if scout.is_prizes_admin?
                        %i.fa.fa-check
                    %td.text-center= nice_date_time_compact(scout.last_sign_in_at) if scout.last_sign_in_at
                    %td.text-center= scout.sign_in_count
                    - if current_scout.is_unit_admin?
                      %td.hidden-print
                        = link_to edit_scout_path(scout) do
                          %span.fa.fa-pencil.fa-lg
                        - unless scout.activity?
                          = link_to scout, :method => :delete, :data => { :confirm => 'Are you sure? This will destroy the Scout account and all related information. It is irreversible.' } do
                            %span.fa.fa-trash.fa-lg
                    
- if current_scout.is_unit_admin?
  %br
  .row
    .col-md-4
      .card
        .card-block    
          .hidden-print      
            = link_to new_scout_path do
              %i.fa.fa-plus.fa-lg
              Add a new Scout/Administrator
