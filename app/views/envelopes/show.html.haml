.row
  .col-md-12
    .card
      .card-block
        - if @envelope.open?
          .pull-right
            = link_to envelope_path(@envelope), method: :delete, data: { confirm: 'Are you sure?'} do
              %i.fa.fa-trash.fa-lg
        .card-title
          %h1
            - if @envelope.open?
              %i.fa.fa-folder-open.fa-lg.text-muted
            - else
              %i.fa.fa-folder.fa-lg.text-muted
            = @envelope.name       



.row
  .col-md-12
    .card
      .card-block
        .card-title
          %h3 Take Orders
        - if @envelope.open?
          %p= link_to "Add a New Take Order", new_envelope_take_order_path(@envelope.id)
        %table.table.table-sm
          %tr
            - if current_scout.admin?
              %th Scout
            %th Customer
            %th Items
            %th Amount
            %th Payment
            %th Receipt emailed
            %th
            %th
          - @take_orders.each do |take_order|              
            %tr
              - if current_scout.admin?
                %td= take_order.scout.name
              %td= take_order.customer_name
              %td
                - take_order.take_order_line_items.each do |line_item|
                  = line_item.product.name
                  = surround("(", ")") do
                    = line_item.quantity
                  %br
              %td= number_to_currency(take_order.value, precision: 0)
              %td= take_order.account.name
              %td= nice_date_time_compact(take_order.receipt_sent_at) if take_order.receipt_sent_at
              %td
                = link_to take_order_path(take_order) do
                  %i.fa.fa-folder-open
              %td
                - if @envelope.open?
                  = link_to envelope_remove_take_order_path(@envelope.id, take_order.id), method: :put do
                    %i.fa.fa-trash
          %tr
            - if current_scout.admin?
              %td
            %td
            %td
            %td= number_to_currency(@envelope.value, precision: 0)
            %td
            %td
            %td
        %br
        %p
          Total number of Take Orders (including donations):
          = @take_orders.count

.row
  .col-md-6
    .card
      .card-block
        .card-title
          %h3 Payment Methods
        %table.table.table-sm
          - @payment_methods.each do |payment_method|
            %tr
              %th= payment_method.account.name
              %td.text-xs-right
                = number_to_currency(@take_orders.where(payment_account_id: payment_method.payment_account_id).joins(:take_order_line_items).sum('take_order_line_items.value'), precision: 0)
          %tr
            %th Total
            %td.text-xs-right= number_to_currency(@envelope.value, precision: 0 )

  - if @envelope.open? && current_scout.admin?
    .col-md-1
    .col-md-4
      .card
        .card-block
          .text-xs-center
            = button_to "Close", close_envelope_path(@envelope.id), {disabled: (current_scout.is_take_order_admin? ? false : true), class: 'btn btn-lg btn-danger'}

  - if @envelope.closed? && current_scout.admin?
    .col-md-1
    .col-md-4
      .card
        .card-block
          .text-xs-center
            = button_to "Re-Open", open_envelope_path(@envelope.id), {disabled: (current_scout.is_take_order_admin? ? false : true), class: 'btn btn-lg btn-success'}

.row
  .col-md-6
    .card
      .card-block
        - if @envelope.closed_at
          Closed at:
          = nice_date_time(@envelope.closed_at)
          %br

        - if @envelope.money_received_at
          Enveloped received at:
          = nice_date_time(@envelope.money_received_at)
          %br

        - if @envelope.money_received_by_id
          Envelope received by:
          - scout = Scout.find(@envelope.money_received_by_id)
          = scout.name
          %br

        - if current_scout.admin?
          Envelope created at:
          = nice_date_time(@envelope.created_at)
          %br
          Envelope updated at:
          = nice_date_time(@envelope.updated_at)